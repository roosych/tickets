<?php

namespace App\Notifications;

use App\Enums\TicketStatusEnum;
use App\Models\Ticket;
use Illuminate\Bus\Queueable;
use Illuminate\Notifications\Messages\MailMessage;
use Illuminate\Notifications\Notification;

class TicketReminderNotification extends Notification
{
    use Queueable;

    protected Ticket $ticket;

    public function __construct(Ticket $ticket)
    {
        $this->ticket = $ticket;
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "done"
        $this->ticketHistory = $ticket->histories()
            ->where('status', TicketStatusEnum::DONE)
            ->latest('created_at')
            ->first();
    }

    public function via(object $notifiable): array
    {
        return ['mail'];
    }

    public function toMail(object $notifiable): MailMessage
    {
        $mail = (new MailMessage)
            ->subject('üîî –û–∂–∏–¥–∞–µ—Ç—Å—è –≤–∞—à–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Ç–∏–∫–µ—Ç—É #' . $this->ticket->id)
            ->greeting('–¢–∏–∫–µ—Ç #' . $this->ticket->id . ' –æ–∂–∏–¥–∞–µ—Ç –∑–∞–∫—Ä—ã—Ç–∏—è');

        if ($this->ticketHistory && $this->ticketHistory->comment) {
            $mail->line('üí¨ ' . $this->ticket->performer->name . ':')
                ->line('"' . $this->ticketHistory->comment . '"');
        }

        return $mail
            ->action('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∏–∫–µ—Ç', url('/cabinet/tickets/' . $this->ticket->id))
            ->line('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –∑–∞–∫—Ä–æ–π—Ç–µ —Ç–∏–∫–µ—Ç, –µ—Å–ª–∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ. ‚úÖ');
    }

}
